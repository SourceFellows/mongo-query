// Code generated by monGo-Query. DO NOT EDIT.
// see https://github.com/SourceFellows/mongo-query or
// https://www.source-fellows.com
package filter

import (
	mq "github.com/sourcefellows/mongo-query"
	{{if .HasStructsInArray }} "strconv" {{end}}
)

{{define "field"}}
    {{- if not .ArrayType -}}
        {{.Name}} mq.Field
    {{ else -}}
        {{.Name}} mq.ArrayField
    {{ end -}}
{{end}}

{{- define "structDefinition" -}}
    struct {
        {{- range .Fields -}}
            {{- template "field" . -}}
        {{- end -}}
        {{range .NestedStructs -}}
            //nested struct {{.Name}}
            {{.Name}} {{ template "structDefinition" .}}
        {{end}}
    }
{{- end -}}

{{define "instanceFields"}}
    {{range .Fields -}}
        {{ if not .ArrayType -}}
            {{.Name}}: mq.Field("{{.FQBsonTag}}"),
        {{ else -}}
            {{.Name}}: mq.ArrayField("{{.FQBsonTag}}"),
        {{ end }}
    {{- end -}}
    {{- range .NestedStructs -}}
        /* {{.Name}} */
        {{.Name}}: {{template "structDefinition" . -}}{
                {{- template "instanceFields" . }}
        },
    {{end}}
{{end}}

{{define "structInstance"}}
    {{.Name}}Filter{
        {{template "instanceFields" . }}
    }
{{end}}

type {{.Name}}Filter {{ template "structDefinition" .}}
var {{.Name}} = {{- template "structInstance" .}}

 {{range .Fields -}}
    {{ if and .ArrayType .StructType -}}
        // {{.Name}}Filter defines a type for an embedded array type
        type {{.Name}}Filter {{ template "structDefinition" .StructType}}
        var {{.Name}} = {{- template "structInstance" .StructType}}

        func (r {{.Name}}Filter) ElementNo(i int) {{.Name}}Filter {
        	prefix := "{{.FQBsonTag}}." + strconv.Itoa(i)
        	return {{.Name}}Filter{
        		{{range .StructType.Fields -}}
                        {{ if not .ArrayType -}}
                            {{.Name}}: mq.Field(prefix + "{{.BsonTag}}"),
                        {{ else -}}
                            {{.Name}}: mq.ArrayField("{{.FQBsonTag}}"),
                        {{ end }}
                    {{- end -}}
        	}
        }
    {{ end }}
 {{- end -}}