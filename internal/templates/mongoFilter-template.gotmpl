// Code generated by Go-MongoDB-Gen. DO NOT EDIT.
// see https://github.com/SourceFellows/go-mongodb-gen

package filter

import (
	"go.mongodb.org/mongo-driver/bson"
)

// object filter
type mongoCriteria struct {
	fieldname string
	filter    bson.M
}

func And(crit ...mongoCriteria) mongoCriteria {
	var mf mongoCriteria = mongoCriteria{filter: bson.M{}}
	for _, filter := range crit {
		mf.filter[filter.fieldname] = filter.filter[filter.fieldname]
	}
	return mf
}

func (mf mongoCriteria) Build() bson.M {
	return mf.filter
}

func (mf mongoCriteria) And(crit mongoCriteria) mongoCriteria {
	mf.filter[crit.fieldname] = crit.filter[crit.fieldname]
	return mf
}

func (mf mongoCriteria) Eq(val interface{}) mongoCriteria {
	mf.filter[mf.fieldname] = bson.M{"$eq": val}
	return mf
}

func (mf mongoCriteria) Gt(val interface{}) mongoCriteria {
	mf.filter[mf.fieldname] = bson.M{"$gt": val}
	return mf
}

func (mf mongoCriteria) Lt(val interface{}) mongoCriteria {
	mf.filter[mf.fieldname] = bson.M{"$lt": val}
	return mf
}

func (mf mongoCriteria) In(val interface{}) mongoCriteria {
	mf.filter[mf.fieldname] = bson.M{"$in": val}
	return mf
}
